name: All OS
on: [push, pull_request]

jobs:
  linux-gcc:
    env:
      build-dir: ${{ github.workspace }}/build
      build-type: RelWithDebInfo
    name: GCC ${{ matrix.gcc }} Linux (${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        arch: [x86, x64]
        os: [ubuntu-20.04] 
        gcc: [7, 8, 9, 10, 11]
        include:
          - gcc: 4.8
            os: ubuntu-18.04
            arch: x86

          - gcc: 5
            os: ubuntu-18.04
            arch: x86

          - gcc: 6
            os: ubuntu-18.04
            arch: x86

          - gcc: 4.8
            os: ubuntu-18.04
            arch: x64

          - gcc: 5
            os: ubuntu-18.04
            arch: x64

          - gcc: 6
            os: ubuntu-18.04
            arch: x64

    steps: 
      - uses: actions/checkout@v2

      # Minimum GCC version required for vcpkg
      - uses: egor-tensin/setup-gcc@v1
        with:
          version: 7
          platform: ${{ matrix.arch }}

      - name: get-cmake
        uses: lukka/get-cmake@v3.21.1

      - name: Run vcpkg
        uses: lukka/run-vcpkg@v7
        with:
          # Just install vcpkg for now, do not install any ports in this step yet.
          setupOnly: true
          # Location of the vcpkg as submodule of the repository.
          vcpkgDirectory: '${{ github.workspace }}/vcpkg'
          vcpkgGitCommitId: '57bd7102d9fd880daa1b0958692294c4a125f6d8'
          # Since the cache must be invalidated when content of the vcpkg.json file changes, let's
          # compute its hash and append this to the computed cache's key.
          appendedCacheKey: ${{ hashFiles( '**/vcpkg.json' ) }}
          vcpkgTriplet: ${{ matrix.triplet }}
          # Ensure the vcpkg artifacts are cached, they are generated in the 'CMAKE_BINARY_DIR/vcpkg_installed'.
          additionalCachedPaths: ${{ env.build-dir }}/vcpkg_installed

      - uses: egor-tensin/setup-gcc@v1
        with:
          version: ${{ matrix.gcc }}
          platform: ${{ matrix.arch }}

      - name: 'Run CMake'
        uses: lukka/run-cmake@v3
        with:
          cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          useVcpkgToolchainFile: true
          cmakeAppendedArgs: '-GNinja -DKANGARU_TEST=ON'
          buildDirectory: ${{ env.build-dir }}

      - name: Test
        working-directory: ${{github.workspace}}/build
        # Execute tests defined by the CMake configuration.  
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C ${{env.build-type}}

  windows-msvc:
    env:
      build-dir: ${{ github.workspace }}/build
      build-type: RelWithDebInfo
    runs-on: windows-latest
    name: MSVC ${{ matrix.msvc-version }} Windows (${{ matrix.arch }})
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2016, windows-2019]
        arch: [x86, x64]
        include:
          - os: windows-2016
            msvc-version: 2017

          - os: windows-2019
            msvc-version: 2019
       
          - arch: x86
            triplet: x86-windows

          - arch: x64
            triplet: x64-windows
    
    steps:
      - uses: actions/checkout@v2
      
      - uses: egor-tensin/vs-shell@v2
        with:
          arch: ${{ matrix.arch }}

      - name: Print cl.exe
        run: cl.exe
        shell: pwsh

      - name: get-cmake
        uses: lukka/get-cmake@v3.21.1

      - name: Run vcpkg
        uses: lukka/run-vcpkg@v7
        with:
          # Just install vcpkg for now, do not install any ports in this step yet.
          setupOnly: true
          # Location of the vcpkg as submodule of the repository.
          vcpkgDirectory: '${{ github.workspace }}/vcpkg'
          vcpkgGitCommitId: '57bd7102d9fd880daa1b0958692294c4a125f6d8'
          # Since the cache must be invalidated when content of the vcpkg.json file changes, let's
          # compute its hash and append this to the computed cache's key.
          appendedCacheKey: ${{ hashFiles( '**/vcpkg.json' ) }}
          vcpkgTriplet: ${{ matrix.triplet }}
          # Ensure the vcpkg artifacts are cached, they are generated in the 'CMAKE_BINARY_DIR/vcpkg_installed'.
          additionalCachedPaths: ${{ env.build-dir }}/vcpkg_installed

      - name: 'Run CMake'
        uses: lukka/run-cmake@v3
        with:
          cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          useVcpkgToolchainFile: true
          cmakeAppendedArgs: '-GNinja -DKANGARU_TEST=ON'
          buildDirectory: ${{ env.build-dir }}

      - name: Test
        working-directory: ${{github.workspace}}/build
        # Execute tests defined by the CMake configuration.  
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C ${{env.build-type}}

